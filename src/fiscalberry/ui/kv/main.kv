ScreenManager:
    LoginScreen:
        name: "login"
    MainScreen:
        name: "main"
    LogScreen: # Add LogScreen here
        name: "logs" # Give it a name for navigation

<AdoptScreen>:
    BoxLayout:
        orientation: 'vertical'
        padding: 20
        spacing: 15
        canvas.before:
            Color:
                rgba: 0.9, 0.9, 1, 1  # Fondo celeste casi blanco
            Rectangle:
                pos: self.pos
                size: self.size

        Image:
            source: app.logo_image
            size_hint_y: None
            height: 96
            allow_stretch: True
            keep_ratio: True
            color: 1, 1, 1, 1
            margin_bottom: 10
        AsyncImage:
            source: root.qrCodeLink
            size_hint_y: None
            height: 96
            allow_stretch: True
            keep_ratio: True
            color: 1, 1, 1, 1
            margin_bottom: 10
        Button:
            text: "Hace click aquí para vincular el dispositivo"
            size_hint_y: None
            height: 40
            background_color: 0.8, 0.5, 0.2, 1  # Naranja suave
            color: 1, 1, 1, 1
            on_press: import webbrowser; webbrowser.open(root.adoptarLink)

<LoginScreen>:
    BoxLayout:
        orientation: 'vertical'
        padding: 20
        spacing: 15
        canvas.before:
            Color:
                rgba: 0.9, 0.9, 1, 1  # Fondo celeste casi blanco
            Rectangle:
                pos: self.pos
                size: self.size

        Image:
            source: app.logo_image
            size_hint_y: None
            height: 96
            allow_stretch: True
            keep_ratio: True
            color: 1, 1, 1, 1
            margin_bottom: 10


        Label:
            text: "Iniciar Sesión"
            font_size: 24
            color: 0.1, 0.2, 0.5, 1  # Azul oscuro

        Label:
            text: "Utilice su usuario y contraseña para acceder al sistema."
            size_hint_y: None
            height: 30
            halign: "center"
            valign: "middle"
            text_size: self.size
            color: 0.5, 0.5, 0.5, 1  # Gris tenue

        Label:
            text: root.errorMsg
            color: 0.8, 0.2, 0.2, 1  # Rojo estándar para errores
            font_size: 16
            size_hint_y: None
            height: 30
            halign: "center"
            valign: "middle"
            text_size: self.size

        TextInput:
            id: username
            hint_text: "Usuario"
            multiline: False
            size_hint_y: None
            height: 50
            background_color: 1, 1, 1, 1
            foreground_color: 0, 0, 0, 1
            padding: [10, 10]
            on_text_validate: password.focus = True  # Al presionar Enter, enfocar el siguiente input
        TextInput:
            id: password
            hint_text: "Contraseña"
            password: True
            multiline: False
            size_hint_y: None
            height: 50
            background_color: 1, 1, 1, 1
            foreground_color: 0, 0, 0, 1
            padding: [10, 10]
            on_text_validate: root.login(username.text, password.text)  # Al presionar Enter, ejecutar login
        Button:
            text: "Login"
            size_hint_y: None
            height: 50
            background_color: 0.1, 0.2, 0.5, 1  # Azul oscuro
            color: 1, 1, 1, 1
            on_press: root.login(username.text, password.text)

# Define a reusable Separator widget
<Separator@Widget>:
    canvas:
        Color:
            rgba: 0.8, 0.8, 0.8, 1 # Light gray color for separator
        Rectangle:
            pos: self.x, self.center_y - dp(0.5) # Center the line vertically
            size: self.width, dp(1) # Make it 1dp thick

<MainScreen>:
    BoxLayout:
        orientation: 'vertical'
        padding: dp(20)
        spacing: dp(15)
        canvas.before:
            Color:
                rgba: 0.95, 0.95, 1, 1 # Slightly lighter blue background
            Rectangle:
                pos: self.pos
                size: self.size

        # Header: Logo, Title, Overall Status Icon
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: dp(48) # Fixed height for the header
            spacing: dp(10)
            Image:
                source: app.logo_image
                size_hint: None, None # Use explicit size
                size: dp(48), dp(48)
                allow_stretch: True
                keep_ratio: True
            Label:
                text: app.name # Consider using app.name if available
                font_size: '20sp'
                halign: 'center'
                valign: 'middle'
                color: 0.1, 0.2, 0.5, 1 # Dark blue text
                size_hint_x: 1 # Allow label to expand horizontally
            Image:
                # Show overall status based on cloud connection primarily
                source: root.connected_image if app.sioConnected else root.disconnected_image
                size_hint: None, None # Use explicit size
                size: dp(32), dp(32)

        Separator:
            height: dp(1) # Use the defined Separator

        # Status Information Area
        BoxLayout:
            orientation: 'vertical'
            size_hint_y: None # Size based on content
            height: self.minimum_height # Calculate height automatically
            spacing: dp(10)

            Label:
                text: "Estado de Conexión"
                font_size: '18sp'
                color: 0.1, 0.2, 0.5, 1
                size_hint_y: None
                height: self.texture_size[1] # Fit height to text

            # Cloud Status (SocketIO)
            BoxLayout:
                orientation: 'horizontal'
                size_hint_y: None
                height: dp(24) # Fixed height for status line
                spacing: dp(5)
                Image:
                    source: root.connected_image if app.sioConnected else root.disconnected_image
                    size_hint: None, None
                    size: dp(24), dp(24)
                Label:
                    # Display text and color based on connection status
                    text: "Nube (Sync): " + ("Conectado" if app.sioConnected else "Desconectado")
                    color: (0.2, 0.8, 0.2, 1) if app.sioConnected else (0.8, 0.2, 0.2, 1) # Green/Red
                    halign: 'left'
                    valign: 'middle'
                    text_size: self.width, None # Enable text wrapping if needed
                    size_hint_x: 1

            # Queue Status (RabbitMQ)
            BoxLayout:
                orientation: 'horizontal'
                size_hint_y: None
                height: dp(24) # Fixed height for status line
                spacing: dp(5)
                Image:
                    # Assumes root has appropriate images for connection status
                    source: root.connected_image if app.rabbitMqConnected else root.disconnected_image
                    size_hint: None, None
                    size: dp(24), dp(24)
                Label:
                    # Display text and color based on connection status
                    text: "Cola Local (Cmds): " + ("Conectado" if app.rabbitMqConnected else "Desconectado")
                    color: (0.2, 0.8, 0.2, 1) if app.rabbitMqConnected else (0.8, 0.2, 0.2, 1) # Green/Red
                    halign: 'left'
                    valign: 'middle'
                    text_size: self.width, None # Enable text wrapping
                    size_hint_x: 1

        Separator:
            height: dp(1)

        # Site Information Area
        BoxLayout:
            orientation: 'vertical'
            size_hint_y: None # Size based on content
            height: self.minimum_height # Calculate height automatically
            spacing: dp(5)

            Label:
                text: "Información del Sitio"
                font_size: '18sp'
                color: 0.1, 0.2, 0.5, 1
                size_hint_y: None
                height: self.texture_size[1]

            Label:
                text: f"Comercio: {app.siteName}"
                font_size: '14sp'
                color: 0.3, 0.3, 0.3, 1 # Dark gray text
                halign: 'left'
                valign: 'middle'
                text_size: self.width, None # Enable wrapping
                size_hint_y: None
                height: self.texture_size[1] # Fit height to text

            Label:
                text: f"Dispositivo: {app.siteAlias}"
                font_size: '14sp'
                color: 0.3, 0.3, 0.3, 1
                halign: 'left'
                valign: 'middle'
                text_size: self.width, None
                size_hint_y: None
                height: self.texture_size[1]

        # Spacer widget to push subsequent elements to the bottom
        Widget:

        # Action Button
        Button:
            text: "Ver Logs del Servicio"
            size_hint_y: None # Fixed height
            height: dp(50)
            background_color: 0.1, 0.2, 0.5, 1 # Consistent button blue
            color: 1, 1, 1, 1 # White text
            on_press: app.root.current = "logs" # Navigate to LogScreen

        # Footer Information (UUID, Version, Host)
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: dp(20) # Compact footer height
            spacing: dp(10)
            Label:
                text: f"UUID: {app.uuid[:8]}"
                font_size: '10sp' # Smaller font for footer details
                color: 0.5, 0.5, 0.5, 1 # Gray text
                halign: "left"
                valign: "middle"
                size_hint_x: 0.4 # Allocate space
            Label:
                text: f"v{app.version}"
                font_size: '10sp'
                color: 0.5, 0.5, 0.5, 1
                halign: "center"
                valign: "middle"
                size_hint_x: 0.2
            Label:
                text: f"Host: {app.host}"
                font_size: '10sp'
                color: 0.5, 0.5, 0.5, 1
                halign: "right"
                valign: "middle"
                size_hint_x: 0.4
            
<LogScreen>:
    BoxLayout:
        orientation: 'vertical'
        padding: 10
        spacing: 10

        Label:
            text: "Logs del Servicio"
            font_size: 24
            size_hint_y: None
            height: 50
        
        Button:
            text: root.logFilePath
            font_size: 12
            size_hint_y: None
            height: self.texture_size[1] + dp(10) # Adjust height based on text
            # Style to look like a clickable link
            background_color: 0, 0, 0, 0 # Transparent background
            color: 0.1, 0.2, 0.8, 1 # Blue color like a hyperlink
            # Action to open the file using a method defined in the Python class
            # Ensure 'open_log_file' method exists in your LogScreen Python class
            on_press: root.open_log_file()

        ScrollView:
            id: scroll_view  # Agregar un ID para acceder desde Python
            size_hint: (1, 1)
            TextInput:
                id: log_output
                text: root.logs
                readonly: True
                font_size: 14
                background_color: 0, 0, 0, 1  # Fondo negro
                foreground_color: 1, 1, 1, 1  # Texto blanco
                size_hint_y: None
                height: self.minimum_height
                multiline: True

        Button:
            text: "Volver"
            size_hint_y: None
            height: 50
            on_press: app.root.current = "main"